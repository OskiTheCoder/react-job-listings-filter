{"version":3,"sources":["componenets/Header.js","componenets/FilterList.js","componenets/Job.js","componenets/JobList.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","src","alt","FilterList","props","removeItem","event","removeFilterItem","target","previousSibling","innerHTML","showFilterList","filteredSkills","map","skill","onClick","clearFilteredItems","Job","filterClick","filterName","handleFilter","logo","company","new","featured","position","postedAt","contract","location","role","level","languages","length","language","tools","tool","JobList","jobs","job","id","App","useState","setShowFilterList","data","visibleJobs","setVisibleJobs","setFilteredSkills","itemName","newFilteredSkills","filter","newVisibleJobs","JSON","parse","stringify","includes","some","prev","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.21982955.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nconst Header = () => {\n  return (\n    <header>\n      <img\n        className='bg-desktop'\n        src={'images/bg-header-desktop.svg'}\n        alt='background'\n      />\n    </header>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport './FilterList.css';\n\nconst FilterList = (props) => {\n  const removeItem = (event) => {\n    props.removeFilterItem(event.target.previousSibling.innerHTML);\n  };\n  const clearItems = () => {\n    props.clearFilteredItems();\n  };\n\n  return (\n    <div className={`filter-container ${props.showFilterList ? '' : 'hide'}`}>\n      <div className='filter-items-container'>\n        {props.filteredSkills.map((skill) => (\n          <div key={skill} className='filter-item-container'>\n            <span className='filter-item'>{skill}</span>\n            <span className='remove-item' onClick={removeItem}>\n              X\n            </span>\n          </div>\n        ))}\n      </div>\n      <div className='clear-items' onClick={clearItems}>\n        Clear\n      </div>\n    </div>\n  );\n};\n\nexport default FilterList;\n","import React from 'react';\nimport './Job.css';\n\nconst Job = (props) => {\n  const filterClick = (event) => {\n    const filterName = event.target.innerHTML;\n    props.handleFilter(filterName);\n  };\n  return (\n    <div className='job-container'>\n      <div className='company-logo'>\n        <img className='logo' src={`images/${props.logo}`} alt='logo' />\n      </div>\n      <div className='job-heading'>\n        <div className='job-description'>\n          <div className='heading-info'>\n            <span className='company-name'>{props.company}</span>\n            {props.new && <span className='new'>NEW!</span>}\n            {props.featured && <span className='featured'> FEATURED</span>}\n          </div>\n          <h1>{props.position}</h1>\n          <div className='job-details'>\n            <span className='date-posted'>{props.postedAt}</span>\n            <span className='dot'> &#183; </span>\n            <span className='job-type'> {props.contract} </span>\n            <span className='dot'> &#183; </span>\n            <span className='job-location'> {props.location} </span>\n          </div>\n        </div>\n      </div>\n      <div className='skills'>\n        <span className='role' onClick={filterClick}>\n          {props.role}\n        </span>\n        <span className='level' onClick={filterClick}>\n          {props.level}\n        </span>\n        {props.languages.length > 0 &&\n          props.languages.map((language) => (\n            <span key={language} className='language' onClick={filterClick}>\n              {language}\n            </span>\n          ))}\n        {props.tools.length > 0 &&\n          props.tools.map((tool) => (\n            <span key={tool} className='tool' onClick={filterClick}>\n              {tool}\n            </span>\n          ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Job;\n","import React from 'react';\nimport Job from './Job';\nimport './JobList.css';\n\nconst JobList = (props) => {\n  return (\n    <>\n      {props.jobs.map((job) => (\n        <Job\n          key={job.id}\n          company={job.company}\n          logo={job.logo}\n          new={job.new}\n          featured={job.featured}\n          position={job.position}\n          role={job.role}\n          level={job.level}\n          postedAt={job.postedAt}\n          contract={job.contract}\n          location={job.location}\n          languages={job.languages}\n          tools={job.tools}\n          handleFilter={props.handleFilter}\n        />\n      ))}\n    </>\n  );\n};\n\nexport default JobList;\n","import { useState } from 'react';\nimport Header from './componenets/Header';\nimport FilterList from './componenets/FilterList';\nimport JobList from './componenets/JobList';\nimport data from './data.json';\n\nfunction App() {\n  const [showFilterList, setShowFilterList] = useState(false);\n  const [visibleJobs, setVisibleJobs] = useState(data);\n  const [filteredSkills, setFilteredSkills] = useState([]);\n\n  const handleFilter = (filterName) => {\n    if (filteredSkills.includes(filterName)) {\n      return;\n    }\n    const newVisibleJobs = visibleJobs.filter((job) => {\n      return (\n        filterName === job.role ||\n        filterName === job.level ||\n        job.languages.includes(filterName) ||\n        job.tools.includes(filterName)\n      );\n    });\n    setShowFilterList(true);\n    setFilteredSkills((prev) => [...prev, filterName]);\n    setVisibleJobs(newVisibleJobs);\n  };\n\n  const removeFilterItem = (itemName) => {\n    if (filteredSkills.length === 1) {\n      clearFilteredItems();\n      return;\n    }\n    const newFilteredSkills = filteredSkills.filter((skill) => {\n      return itemName !== skill;\n    });\n\n    let copiedData = JSON.parse(JSON.stringify(data));\n    const newVisibleJobs = copiedData.filter((job) => {\n      return (\n        newFilteredSkills.includes(job.role) ||\n        newFilteredSkills.includes(job.level) ||\n        newFilteredSkills.some((skill) => job.languages.includes(skill)) ||\n        newFilteredSkills.some((skill) => job.tools.includes(skill))\n      );\n    });\n    setFilteredSkills(newFilteredSkills);\n    setVisibleJobs(newVisibleJobs);\n  };\n\n  const clearFilteredItems = () => {\n    setVisibleJobs(data);\n    setFilteredSkills([]);\n    setShowFilterList(false);\n  };\n\n  return (\n    <main>\n      <Header />\n      <FilterList\n        filteredSkills={filteredSkills}\n        removeFilterItem={removeFilterItem}\n        clearFilteredItems={clearFilteredItems}\n        showFilterList={showFilterList}\n      />\n      <JobList jobs={visibleJobs} handleFilter={handleFilter} />\n    </main>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}